/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package churchsystem;

import com.github.sarxos.webcam.Webcam;
import java.awt.Dimension;
import java.awt.HeadlessException;
import java.awt.Image;
import java.awt.event.KeyEvent;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.net.URL;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.Period;
import java.util.Date;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author UMAGAGEE
 */
public class manageMember extends javax.swing.JFrame {
Connection con = null;
PreparedStatement ps= null;
ResultSet rs = null;
Statement stm=null;
    String imagePath=null;
      Webcam webcam;
    Boolean isRunning = false;

    

    /**
     * Creates new form manageMember
     */
    public manageMember() {
        initComponents();
        
         setLocationRelativeTo(null);
         Date date = new Date();
         birthday.setDate(date);
         dateJoin.setDate(date);
         cmdMarriagetype.disable();
         cmbPosition.disable();
         cmdDuration.disable();
         jLabel5.hide();
         jLabel6.hide();
         btnPrint.setEnabled(false);
        // jButton5.hide();
        jLabel3.setText(HomePage.username1.getText());
         
         
          con=ConnectionToDatabase.conn();
          showStudent();
            //totalMember();
           
    }
       int pos=0;
    
    //Function to Resize Image to fit into Jlabel 
    public ImageIcon ResizeImage(String imagePath,byte[] pic){
    ImageIcon myImage = null;
     if(imagePath!=null){
      myImage=new ImageIcon(imagePath);
     }
     else{
     myImage=new ImageIcon(pic);
     }
     
     Image img1 = myImage.getImage();
     Image img2 = img1.getScaledInstance(lblPicture.getWidth(),lblPicture.getHeight(),Image.SCALE_SMOOTH);
     ImageIcon image =new ImageIcon(img2);
     return image;
    };

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        cmdDuration = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        txtSurname = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtHometown = new javax.swing.JTextField();
        txtResidence = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtContact = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        txtSpousename = new javax.swing.JTextField();
        cmdBaptise = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        txtProfession = new javax.swing.JTextField();
        txtEduLevel = new javax.swing.JComboBox<>();
        jLabel15 = new javax.swing.JLabel();
        cmdMarriagetype = new javax.swing.JComboBox<>();
        txtClass = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        txtLeader = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        cmbPositionHeld = new javax.swing.JComboBox<>();
        cmbPosition = new javax.swing.JComboBox<>();
        CmdGender = new javax.swing.JComboBox<>();
        cmdMarital = new javax.swing.JComboBox<>();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        txtAddress = new javax.swing.JTextField();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        txtFather = new javax.swing.JTextField();
        jLabel35 = new javax.swing.JLabel();
        txtMother = new javax.swing.JTextField();
        txtFirstname = new javax.swing.JTextField();
        jLabel37 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        btnChoose = new javax.swing.JButton();
        lblPicture = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtRetakePic = new javax.swing.JButton();
        txtOpenCam = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        txtSearch = new javax.swing.JTextField();
        jButton10 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton7 = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        btnAll = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnPrint = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Manage Member");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 204, 204));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Member Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 18))); // NOI18N
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        cmdDuration.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        cmdDuration.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "less than a year", "1 to 3 years", "above 3 years" }));
        cmdDuration.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdDurationActionPerformed(evt);
            }
        });
        jPanel2.add(cmdDuration, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 500, 150, 30));

        jLabel8.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel8.setText("Marriage Status:");
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 250, -1, -1));

        txtSurname.setBackground(new java.awt.Color(204, 204, 204));
        txtSurname.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtSurname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSurnameActionPerformed(evt);
            }
        });
        txtSurname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSurnameKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSurnameKeyTyped(evt);
            }
        });
        jPanel2.add(txtSurname, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 50, 210, 30));

        jLabel9.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel9.setText("Hometown:");
        jPanel2.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 180, -1, -1));

        txtHometown.setBackground(new java.awt.Color(204, 204, 204));
        txtHometown.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtHometown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHometownActionPerformed(evt);
            }
        });
        txtHometown.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtHometownKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtHometownKeyTyped(evt);
            }
        });
        jPanel2.add(txtHometown, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 170, 160, 30));

        txtResidence.setBackground(new java.awt.Color(204, 204, 204));
        txtResidence.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtResidence.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtResidenceActionPerformed(evt);
            }
        });
        txtResidence.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtResidenceKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtResidenceKeyTyped(evt);
            }
        });
        jPanel2.add(txtResidence, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 310, 160, 30));

        jLabel11.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel11.setText("Age:");
        jPanel2.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 110, -1, -1));

        txtContact.setBackground(new java.awt.Color(204, 204, 204));
        txtContact.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtContact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtContactActionPerformed(evt);
            }
        });
        txtContact.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtContactKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtContactKeyTyped(evt);
            }
        });
        jPanel2.add(txtContact, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 110, 140, 30));

        jLabel6.setBackground(new java.awt.Color(204, 204, 204));
        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel6.setText("00");
        jLabel6.setOpaque(true);
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 100, -1, 30));

        jLabel13.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel13.setText("Spouse Name:");
        jPanel2.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 250, -1, -1));

        txtSpousename.setEditable(false);
        txtSpousename.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtSpousename.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSpousenameActionPerformed(evt);
            }
        });
        txtSpousename.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSpousenameKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSpousenameKeyTyped(evt);
            }
        });
        jPanel2.add(txtSpousename, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 240, 150, 30));

        cmdBaptise.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        cmdBaptise.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Yes", "No" }));
        cmdBaptise.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdBaptiseActionPerformed(evt);
            }
        });
        jPanel2.add(cmdBaptise, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 370, 100, 30));

        jLabel14.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel14.setText("Profession:");
        jPanel2.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 390, -1, -1));

        txtProfession.setBackground(new java.awt.Color(204, 204, 204));
        txtProfession.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtProfession.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtProfessionActionPerformed(evt);
            }
        });
        txtProfession.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtProfessionKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtProfessionKeyTyped(evt);
            }
        });
        jPanel2.add(txtProfession, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 380, 160, 30));

        txtEduLevel.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtEduLevel.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", "BECE", "SSCE", "WASSCE", "Diploma", "Degree", "Masters", "PHD", "Other" }));
        txtEduLevel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEduLevelActionPerformed(evt);
            }
        });
        jPanel2.add(txtEduLevel, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 160, 160, 30));

        jLabel15.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel15.setText("Date of Joining:");
        jPanel2.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 370, -1, -1));

        cmdMarriagetype.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        cmdMarriagetype.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", "Holy Matrimony", "Church Blessing", "Cutomary", "Others" }));
        cmdMarriagetype.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdMarriagetypeActionPerformed(evt);
            }
        });
        jPanel2.add(cmdMarriagetype, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 240, 160, 30));

        txtClass.setBackground(new java.awt.Color(204, 204, 204));
        txtClass.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtClass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtClassActionPerformed(evt);
            }
        });
        txtClass.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtClassKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtClassKeyTyped(evt);
            }
        });
        jPanel2.add(txtClass, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 430, 210, 30));

        jLabel16.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel16.setText("Home cell:");
        jPanel2.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 440, -1, -1));

        txtLeader.setBackground(new java.awt.Color(204, 204, 204));
        txtLeader.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtLeader.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLeaderActionPerformed(evt);
            }
        });
        txtLeader.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtLeaderKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtLeaderKeyTyped(evt);
            }
        });
        jPanel2.add(txtLeader, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 430, 210, 30));

        jLabel17.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel17.setText("Any Position held or hold?");
        jPanel2.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 510, -1, -1));

        cmbPositionHeld.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        cmbPositionHeld.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", "Yes", "No" }));
        cmbPositionHeld.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbPositionHeldItemStateChanged(evt);
            }
        });
        cmbPositionHeld.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbPositionHeldActionPerformed(evt);
            }
        });
        jPanel2.add(cmbPositionHeld, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 500, 90, 30));

        cmbPosition.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        cmbPosition.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "Elder", "Deacon", "Deaconers" }));
        cmbPosition.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbPositionActionPerformed(evt);
            }
        });
        jPanel2.add(cmbPosition, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 500, 170, 30));

        CmdGender.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        CmdGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female", "Other" }));
        jPanel2.add(CmdGender, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 50, 80, 30));

        cmdMarital.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        cmdMarital.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Single", "Married", "Divorce", "Widow" }));
        cmdMarital.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmdMaritalItemStateChanged(evt);
            }
        });
        cmdMarital.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdMaritalActionPerformed(evt);
            }
        });
        jPanel2.add(cmdMarital, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 240, 140, 30));

        jLabel21.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel21.setText("Firstname:");
        jPanel2.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 60, -1, -1));

        jLabel22.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel22.setText("Sex:");
        jPanel2.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 60, -1, -1));

        jLabel23.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel23.setText("Residence Address:");
        jPanel2.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 170, 110, -1));

        jLabel24.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel24.setText("Marriage Type:");
        jPanel2.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 250, 90, -1));

        jLabel25.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel25.setText("Education:");
        jPanel2.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 170, 70, -1));

        jLabel27.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel27.setText("Baptised:");
        jPanel2.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 380, 60, -1));

        jLabel28.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel28.setText("Position:");
        jPanel2.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 510, -1, -1));

        jLabel29.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel29.setText("Duration:");
        jPanel2.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 510, -1, -1));

        jLabel30.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel30.setText("Home cell Leader:");
        jPanel2.add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 440, -1, -1));

        jLabel31.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel31.setText("BirthDate:");
        jPanel2.add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 120, -1, -1));

        txtAddress.setBackground(new java.awt.Color(204, 204, 204));
        txtAddress.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAddressActionPerformed(evt);
            }
        });
        txtAddress.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtAddressKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtAddressKeyTyped(evt);
            }
        });
        jPanel2.add(txtAddress, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 160, 210, 30));

        jLabel32.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel32.setText("Contact:");
        jPanel2.add(jLabel32, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 120, -1, -1));

        jLabel33.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel33.setText("Residence:");
        jPanel2.add(jLabel33, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 320, 80, -1));

        jLabel34.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel34.setText("Father Name");
        jPanel2.add(jLabel34, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 310, 80, -1));

        txtFather.setBackground(new java.awt.Color(204, 204, 204));
        txtFather.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtFather.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFatherActionPerformed(evt);
            }
        });
        txtFather.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtFatherKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtFatherKeyTyped(evt);
            }
        });
        jPanel2.add(txtFather, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 300, 200, 30));

        jLabel35.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel35.setText("Mother Name:");
        jPanel2.add(jLabel35, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 320, 90, -1));

        txtMother.setBackground(new java.awt.Color(204, 204, 204));
        txtMother.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtMother.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMotherActionPerformed(evt);
            }
        });
        txtMother.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtMotherKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtMotherKeyTyped(evt);
            }
        });
        jPanel2.add(txtMother, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 310, 210, 30));

        txtFirstname.setBackground(new java.awt.Color(204, 204, 204));
        txtFirstname.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtFirstname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFirstnameActionPerformed(evt);
            }
        });
        txtFirstname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtFirstnameKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtFirstnameKeyTyped(evt);
            }
        });
        jPanel2.add(txtFirstname, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 50, 190, 30));

        jLabel37.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel37.setText("Lastname:");
        jPanel2.add(jLabel37, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 60, -1, -1));

        dateJoin.setBackground(new java.awt.Color(204, 204, 204));
        jPanel2.add(dateJoin, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 360, 160, 30));

        birthday.setBackground(new java.awt.Color(204, 204, 204));
        birthday.setOpaque(false);
        jPanel2.add(birthday, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 110, 150, 30));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 104, 893, 560));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Image", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 18))); // NOI18N
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnChoose.setBackground(new java.awt.Color(51, 204, 255));
        btnChoose.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnChoose.setText("CHOOSE");
        btnChoose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChooseActionPerformed(evt);
            }
        });
        jPanel3.add(btnChoose, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 318, 220, 34));

        lblPicture.setBackground(new java.awt.Color(153, 153, 153));
        lblPicture.setOpaque(true);
        jPanel3.add(lblPicture, new org.netbeans.lib.awtextra.AbsoluteConstraints(34, 66, 167, 148));

        jLabel7.setBackground(new java.awt.Color(0, 0, 0));
        jLabel7.setFont(new java.awt.Font("Adobe Gothic Std B", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("* Image Should not be more than 1mb");
        jLabel7.setOpaque(true);
        jPanel3.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 24, 222, 24));

        txtRetakePic.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        txtRetakePic.setText("Retake Picture");
        txtRetakePic.setEnabled(false);
        txtRetakePic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRetakePicActionPerformed(evt);
            }
        });
        jPanel3.add(txtRetakePic, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 265, -1, 41));

        txtOpenCam.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        txtOpenCam.setText("Open Webcam");
        txtOpenCam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtOpenCamActionPerformed(evt);
            }
        });
        jPanel3.add(txtOpenCam, new org.netbeans.lib.awtextra.AbsoluteConstraints(123, 265, -1, 41));

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 110, 230, 370));

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel2.setText("MEMBER ID:");

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Search Member Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 18))); // NOI18N

        txtSearch.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchActionPerformed(evt);
            }
        });
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSearchKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSearchKeyTyped(evt);
            }
        });

        jButton10.setBackground(new java.awt.Color(51, 204, 255));
        jButton10.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jButton10.setText("SEARCH");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jButton10))
        );

        jLabel5.setBackground(new java.awt.Color(255, 204, 204));
        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel5.setText("00");
        jLabel5.setOpaque(true);

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel3.setText("MEMBER ID");

        jButton7.setBackground(new java.awt.Color(51, 204, 255));
        jButton7.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jButton7.setText("HOME");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5)
                .addGap(80, 80, 80)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addGap(48, 48, 48)
                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(65, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jButton7)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel5))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(13, 7, 1140, 80));

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnAll.setBackground(new java.awt.Color(51, 204, 255));
        btnAll.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnAll.setText("VIEW ALL MEMBERS");
        btnAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAllActionPerformed(evt);
            }
        });
        jPanel7.add(btnAll, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, 210, -1));

        btnSave.setBackground(new java.awt.Color(51, 204, 255));
        btnSave.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnSave.setText("SAVE");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        jPanel7.add(btnSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, 200, -1));

        btnUpdate.setBackground(new java.awt.Color(51, 204, 255));
        btnUpdate.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnUpdate.setText("UPDATE");
        btnUpdate.setEnabled(false);
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        jPanel7.add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 90, 30));

        btnDelete.setBackground(new java.awt.Color(51, 204, 255));
        btnDelete.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnDelete.setText("DELETE");
        btnDelete.setEnabled(false);
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        jPanel7.add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 50, 90, 30));

        btnPrint.setBackground(new java.awt.Color(0, 153, 0));
        btnPrint.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnPrint.setText("PRINT");
        btnPrint.setEnabled(false);
        btnPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrintActionPerformed(evt);
            }
        });
        jPanel7.add(btnPrint, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 90, 90, 30));

        btnReset.setBackground(new java.awt.Color(0, 153, 0));
        btnReset.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnReset.setText("RESET");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });
        jPanel7.add(btnReset, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 90, 30));

        jPanel1.add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 490, 230, 180));

        jScrollPane1.setViewportView(jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1173, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 682, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchActionPerformed

    private void txtSurnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSurnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSurnameActionPerformed

    private void txtHometownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHometownActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHometownActionPerformed

    private void txtResidenceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtResidenceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtResidenceActionPerformed

    private void txtContactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtContactActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtContactActionPerformed

    private void txtSpousenameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSpousenameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSpousenameActionPerformed

    private void cmdBaptiseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdBaptiseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmdBaptiseActionPerformed

    private void txtProfessionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtProfessionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtProfessionActionPerformed

    private void cmdDurationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdDurationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmdDurationActionPerformed

    private void txtEduLevelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEduLevelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEduLevelActionPerformed

    private void cmdMarriagetypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdMarriagetypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmdMarriagetypeActionPerformed

    private void txtClassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtClassActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtClassActionPerformed

    private void txtLeaderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLeaderActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLeaderActionPerformed

    private void cmbPositionHeldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbPositionHeldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbPositionHeldActionPerformed

    private void cmbPositionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbPositionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbPositionActionPerformed

    private void btnChooseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChooseActionPerformed
                    ///Selecting images
        try{
            JFileChooser file = new JFileChooser();
            file.setCurrentDirectory(new File(System.getProperty("user.home")));

            FileNameExtensionFilter filter = new FileNameExtensionFilter("*.images","jpg","png");

            file.addChoosableFileFilter(filter);
            int result =file.showSaveDialog(null);
            if(result==JFileChooser.APPROVE_OPTION){
                File selectedFile=file.getSelectedFile();
                String path=selectedFile.getAbsolutePath();
                lblPicture.setIcon(ResizeImage(path,null));
                imagePath=path;
            }
            else{
                JOptionPane.showMessageDialog(null, "No file");
            }
        }
        catch(Exception ex){
            JOptionPane.showMessageDialog(null, "Error!");

        }
    }//GEN-LAST:event_btnChooseActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
    String s1 =null; 
        int p = JOptionPane.showConfirmDialog(null, "Are you sure you want to Save record?","Save Record",JOptionPane.YES_NO_OPTION);
if(p==0){
    if(txtSurname.getText().equals("") && txtFirstname.getText().equals("") ){
         JOptionPane.showMessageDialog(null,("Please enter your full name"));
    }else{
        
        if(imagePath==null){
               try{

ps=con.prepareStatement("INSERT INTO member "
 + "(surname,firstname,gender,dob,home_town,residence,contact,marital_status,marriage_type,"
        + "spouse_name,education_level,profession,"
 + "date_join,baptise,class_name,class_leader,position_held,position,position_duration"
 + "address,father_name,mother_name,"
 + " )"
 + " values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");

                ps.setString(1, txtSurname.getText().trim());
                ps.setString(2, txtFirstname.getText().trim());
                ps.setString(3, CmdGender.getSelectedItem().toString());
                SimpleDateFormat dateFormat=new SimpleDateFormat("yyy-MM-dd");
                String dob=dateFormat.format(birthday.getDate());
                ps.setString(4,dob);
                ps.setString(5, txtHometown.getText().trim());
                ps.setString(6, txtResidence.getText().trim());
                ps.setString(7, txtContact.getText().trim());
                ps.setString(8, cmdMarital.getSelectedItem().toString());
                ps.setString(9, cmdMarriagetype.getSelectedItem().toString());
                ps.setString(10, txtSpousename.getText().trim());
                ps.setString(11, txtEduLevel.getSelectedItem().toString());
                ps.setString(12, txtProfession.getText().trim());
                String joinDate=dateFormat.format(dateJoin.getDate());
                ps.setString(13,joinDate);
                ps.setString(14, cmdBaptise.getSelectedItem().toString());
                ps.setString(15, txtClass.getText().trim());
                ps.setString(16, txtLeader.getText().trim());
                ps.setString(17, cmbPositionHeld.getSelectedItem().toString());
                ps.setString(18, cmbPosition.getSelectedItem().toString());
                ps.setString(19, cmdDuration.getSelectedItem().toString());

                ps.setString(20,txtAddress.getText().trim());
                ps.setString(21, txtFather.getText().trim());
                ps.setString(22,txtMother.getText().trim());
                
           
                ps.execute();
               
                JOptionPane.showMessageDialog(null,"Data is saved successfully");
               clear();
               showStudent();
               
            }
            catch( HeadlessException | SQLException e){
                JOptionPane.showMessageDialog(null,e.getMessage());
                     clear();
            }
        
        }else{
       
            try{

ps=con.prepareStatement("INSERT INTO member "
 + "(surname,firstname,gender,dob,home_town,residence,contact,marital_status,marriage_type,"
        + "spouse_name,education_level,profession,"
 + "date_join,baptise,class_name,class_leader,position_held,position,position_duration"
 + ",image,address,father_name,mother_name)"
 + " values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");

                ps.setString(1, txtSurname.getText().trim());
                ps.setString(2, txtFirstname.getText().trim());
                ps.setString(3, CmdGender.getSelectedItem().toString());
                SimpleDateFormat dateFormat=new SimpleDateFormat("yyy-MM-dd");
                String dob=dateFormat.format(birthday.getDate());
                ps.setString(4,dob);
                ps.setString(5, txtHometown.getText().trim());
                ps.setString(6, txtResidence.getText().trim());
                ps.setString(7, txtContact.getText().trim());
                ps.setString(8, cmdMarital.getSelectedItem().toString());
                ps.setString(9, cmdMarriagetype.getSelectedItem().toString());
                ps.setString(10, txtSpousename.getText().trim());
                ps.setString(11, txtEduLevel.getSelectedItem().toString());
                ps.setString(12, txtProfession.getText().trim());
                String joinDate=dateFormat.format(dateJoin.getDate());
                ps.setString(13,joinDate);
                ps.setString(14, cmdBaptise.getSelectedItem().toString());
                ps.setString(15, txtClass.getText().trim());
                ps.setString(16, txtLeader.getText().trim());
                ps.setString(17, cmbPositionHeld.getSelectedItem().toString());
                ps.setString(18, cmbPosition.getSelectedItem().toString());
                ps.setString(19, cmdDuration.getSelectedItem().toString());
                InputStream img;
                img = new FileInputStream(new File(imagePath));
                ps.setBlob(20,img);
                ps.setString(21,txtAddress.getText().trim());
                ps.setString(22, txtFather.getText().trim());
                ps.setString(23,txtMother.getText().trim());
               
                
                ps.execute();
               
                JOptionPane.showMessageDialog(null,"Data is saved successfully");
               clear();
               showStudent();
               
               
            }
            catch( HeadlessException | FileNotFoundException | SQLException e){
                JOptionPane.showMessageDialog(null,e.getMessage());
                     clear();
            }
            }
     }
         
         
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void cmbPositionHeldItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbPositionHeldItemStateChanged
          String index= cmbPositionHeld.getSelectedItem().toString();
       if(index.equals("Yes")){
           cmbPosition.enable();
           cmdDuration.enable();
       }else{
           cmbPosition.disable();
           cmdDuration.disable();
           cmbPosition.setSelectedIndex(0);
           cmdDuration.setSelectedIndex(0);
       }
    }//GEN-LAST:event_cmbPositionHeldItemStateChanged

    private void cmdMaritalItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmdMaritalItemStateChanged
            int index= cmdMarital.getSelectedIndex();
       if(index==1){
           cmdMarriagetype.enable();
           txtSpousename.setEditable(true);
       }else{
           cmdMarriagetype.disable();
           txtSpousename.setEditable(false);
            cmdMarriagetype.setSelectedIndex(0);
            txtSpousename.setText("");
       }
    }//GEN-LAST:event_cmdMaritalItemStateChanged

    private void cmdMaritalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdMaritalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmdMaritalActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        clear();
        //showStudent();
    }//GEN-LAST:event_btnResetActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
    
       
     
    }//GEN-LAST:event_formWindowOpened

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
  if(evt.getKeyCode()==KeyEvent.VK_BACK_SPACE){
                clear();
                }
                                   

    }//GEN-LAST:event_txtSearchKeyReleased

    private void txtSurnameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSurnameKeyTyped
          if(!Character.isAlphabetic(evt.getKeyChar())&& !Character.isSpaceChar(evt.getKeyChar())){
            
        }else if(txtSurname.getText().trim().length()==0 && Character.isLowerCase(evt.getKeyChar())) {
          evt.setKeyChar(Character.toUpperCase(evt.getKeyChar()));
        }
    }//GEN-LAST:event_txtSurnameKeyTyped

    private void txtHometownKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHometownKeyTyped
           if(!Character.isAlphabetic(evt.getKeyChar())&& !Character.isSpaceChar(evt.getKeyChar())){
            
        }else if(txtHometown.getText().trim().length()==0 && Character.isLowerCase(evt.getKeyChar())) {
          evt.setKeyChar(Character.toUpperCase(evt.getKeyChar()));
        }
    }//GEN-LAST:event_txtHometownKeyTyped

    private void txtResidenceKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtResidenceKeyTyped
       if(!Character.isAlphabetic(evt.getKeyChar())&& !Character.isSpaceChar(evt.getKeyChar())){
            
        }else if(txtResidence.getText().trim().length()==0 && Character.isLowerCase(evt.getKeyChar())) {
          evt.setKeyChar(Character.toUpperCase(evt.getKeyChar()));
        }
    }//GEN-LAST:event_txtResidenceKeyTyped

    private void txtContactKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtContactKeyTyped
           if(!Character.isAlphabetic(evt.getKeyChar())&& !Character.isSpaceChar(evt.getKeyChar())){
            
        }else if(txtContact.getText().trim().length()==0 && Character.isLowerCase(evt.getKeyChar())) {
          evt.setKeyChar(Character.toUpperCase(evt.getKeyChar()));
        }
    }//GEN-LAST:event_txtContactKeyTyped

    private void txtSpousenameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSpousenameKeyTyped
           if(!Character.isAlphabetic(evt.getKeyChar())&& !Character.isSpaceChar(evt.getKeyChar())){
            
        }else if(txtSpousename.getText().trim().length()==0 && Character.isLowerCase(evt.getKeyChar())) {
          evt.setKeyChar(Character.toUpperCase(evt.getKeyChar()));
        }
    }//GEN-LAST:event_txtSpousenameKeyTyped

    private void txtProfessionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtProfessionKeyTyped
     if(!Character.isAlphabetic(evt.getKeyChar())&& !Character.isSpaceChar(evt.getKeyChar())){
            
        }else if(txtProfession.getText().trim().length()==0 && Character.isLowerCase(evt.getKeyChar())) {
          evt.setKeyChar(Character.toUpperCase(evt.getKeyChar()));
        }
    }//GEN-LAST:event_txtProfessionKeyTyped

    private void txtClassKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtClassKeyTyped
          if(!Character.isAlphabetic(evt.getKeyChar())&& !Character.isSpaceChar(evt.getKeyChar())){
            
        }else if(txtClass.getText().trim().length()==0 && Character.isLowerCase(evt.getKeyChar())) {
          evt.setKeyChar(Character.toUpperCase(evt.getKeyChar()));
        }
    }//GEN-LAST:event_txtClassKeyTyped

    private void txtLeaderKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLeaderKeyTyped
        if(!Character.isAlphabetic(evt.getKeyChar())&& !Character.isSpaceChar(evt.getKeyChar())){
            
        }else if(txtLeader.getText().trim().length()==0 && Character.isLowerCase(evt.getKeyChar())) {
          evt.setKeyChar(Character.toUpperCase(evt.getKeyChar()));
        }
    }//GEN-LAST:event_txtLeaderKeyTyped

    private void txtSurnameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSurnameKeyReleased
              String user=txtSurname.getText().trim();
if(containsDigit(user)){
     txtSurname.setText("");
      JOptionPane.showMessageDialog(null, "*Please Enter only Alphabet (A-Z)");

}
    }//GEN-LAST:event_txtSurnameKeyReleased

    private void txtHometownKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHometownKeyReleased
                 String user=txtHometown.getText().trim();
if(containsDigit(user)){
     txtHometown.setText("");
      JOptionPane.showMessageDialog(null, "*Please Enter only Alphabet (A-Z)");

}
    }//GEN-LAST:event_txtHometownKeyReleased

    private void txtResidenceKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtResidenceKeyReleased
                    String user=txtResidence.getText().trim();
if(containsDigit(user)){
     txtResidence.setText("");
      JOptionPane.showMessageDialog(null, "*Please Enter only Alphabet (A-Z)");

}
    }//GEN-LAST:event_txtResidenceKeyReleased

    private void txtSpousenameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSpousenameKeyReleased
               String user=txtSpousename.getText().trim();
if(containsDigit(user)){
     txtSpousename.setText("");
      JOptionPane.showMessageDialog(null, "*Please Enter only Alphabet (A-Z)");

}
    }//GEN-LAST:event_txtSpousenameKeyReleased

    private void txtProfessionKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtProfessionKeyReleased
                 String user=txtProfession.getText().trim();
if(containsDigit(user)){
     txtProfession.setText("");
      JOptionPane.showMessageDialog(null, "*Please Enter only Alphabet (A-Z)");

}
    }//GEN-LAST:event_txtProfessionKeyReleased

    private void txtClassKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtClassKeyReleased
                  String user=txtClass.getText().trim();
if(containsDigit(user)){
     txtClass.setText("");
      JOptionPane.showMessageDialog(null, "*Please Enter only Alphabet (A-Z)");

}
    }//GEN-LAST:event_txtClassKeyReleased

    private void txtLeaderKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLeaderKeyReleased
                  String user=txtLeader.getText().trim();
if(containsDigit(user)){
     txtLeader.setText("");
      JOptionPane.showMessageDialog(null, "*Please Enter only Alphabet (A-Z)");

}
    }//GEN-LAST:event_txtLeaderKeyReleased

    private void txtContactKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtContactKeyPressed
            //Preventing user from entering a String  
        String number =txtContact.getText().trim();
        int l=number.length();
        if((evt.getKeyChar() >= '0' && evt.getKeyChar()<='9' || evt.getKeyChar()== KeyEvent.VK_BACK_SPACE)){
            txtContact.setEditable(true);
        }else{
          //  txtContact.setEditable(false);
          
             JOptionPane.showMessageDialog(null, "*Please Enter only digits(0-9)");
              txtContact.setText("");
        }
    }//GEN-LAST:event_txtContactKeyPressed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
 String s1;             
        int p = JOptionPane.showConfirmDialog(null, "Are you sure you want to update?","Update Record",JOptionPane.YES_NO_OPTION);
        if(p==0){
            if(imagePath==null){

                try{

String sql= "update member set "
 + "surname=?,firstname=?,gender=?,dob=?,home_town=?,residence=?,contact=?,marital_status=?"
        + ",marriage_type=?,spouse_name=?,education_level=?,profession=?,"
 + "date_join=?,baptise=?,class_name=?,class_leader=?,position_held=?,position=?"
        + ",position_duration=?"
 + ",address=?,father_name=?,mother_name=?"
  + "where ID='"+jLabel5.getText().trim()+"' ";

                ps=con.prepareStatement(sql);
               
                ps.setString(1, txtSurname.getText().trim());
                ps.setString(2, txtFirstname.getText().trim());
                ps.setString(3, CmdGender.getSelectedItem().toString());
                SimpleDateFormat dateFormat=new SimpleDateFormat("yyy-MM-dd");
                String dob=dateFormat.format(birthday.getDate());
                ps.setString(4,dob);
                ps.setString(5, txtHometown.getText().trim());
                ps.setString(6, txtResidence.getText().trim());
                ps.setString(7, txtContact.getText().trim());
                ps.setString(8, cmdMarital.getSelectedItem().toString());
                ps.setString(9, cmdMarriagetype.getSelectedItem().toString());
                ps.setString(10, txtSpousename.getText().trim());
                ps.setString(11, txtEduLevel.getSelectedItem().toString());
                ps.setString(12, txtProfession.getText().trim());
                String joinDate=dateFormat.format(dateJoin.getDate());
                ps.setString(13,joinDate);
                ps.setString(14, cmdBaptise.getSelectedItem().toString());
                ps.setString(15, txtClass.getText().trim());
                ps.setString(16, txtLeader.getText().trim());
                ps.setString(17, cmbPositionHeld.getSelectedItem().toString());
                ps.setString(18, cmbPosition.getSelectedItem().toString());
                ps.setString(19, cmdDuration.getSelectedItem().toString());
                ps.setString(20,txtAddress.getText().trim());
                ps.setString(21, txtFather.getText().trim());
                ps.setString(22,txtMother.getText().trim());
                
                
                ps.executeUpdate();
                JOptionPane.showMessageDialog(null, "Record Updated");
                clear();
                //showStudent();
                updateAge();
                    

                }catch(HeadlessException | SQLException e){
                    JOptionPane.showMessageDialog(null, e);
                }
            }else{
                try{
                  
String sql1= "update member set "
 + "surname=?,firstname=?,gender=?,dob=?,home_town=?,residence=?,contact=?"
        + ",marital_status=?,marriage_type=?,spouse_name=?,education_level=?,profession=?,"
 + "date_join=?,baptise=?,class_name=?,class_leader=?,position_held=?"
        + ",position=?,position_duration=?,"
 + "image=?,address=?,father_name=?,mother_name=?"
 + "where ID='"+jLabel5.getText().trim()+"' ";

                ps=con.prepareStatement(sql1);
                ps.setString(1, txtSurname.getText().trim());
                ps.setString(2, txtFirstname.getText().trim());
                ps.setString(3, CmdGender.getSelectedItem().toString());
                SimpleDateFormat dateFormat=new SimpleDateFormat("yyy-MM-dd");
                String dob=dateFormat.format(birthday.getDate());
                ps.setString(4,dob);
                ps.setString(5, txtHometown.getText().trim());
                ps.setString(6, txtResidence.getText().trim());
                ps.setString(7, txtContact.getText().trim());
                ps.setString(8, cmdMarital.getSelectedItem().toString());
                ps.setString(9, cmdMarriagetype.getSelectedItem().toString());
                ps.setString(10, txtSpousename.getText().trim());
                ps.setString(11, txtEduLevel.getSelectedItem().toString());
                ps.setString(12, txtProfession.getText().trim());
                String joinDate=dateFormat.format(dateJoin.getDate());
                ps.setString(13,joinDate);
                ps.setString(14, cmdBaptise.getSelectedItem().toString());
                ps.setString(15, txtClass.getText().trim());
                ps.setString(16, txtLeader.getText().trim());
                ps.setString(17, cmbPositionHeld.getSelectedItem().toString());
                ps.setString(18, cmbPosition.getSelectedItem().toString());
                ps.setString(19, cmdDuration.getSelectedItem().toString());
                InputStream img;
                img = new FileInputStream(new File(imagePath));
                ps.setBlob(20,img);
                ps.setString(21,txtAddress.getText().trim());
                ps.setString(22, txtFather.getText().trim());
                ps.setString(23,txtMother.getText().trim());
                
                    ps.executeUpdate();
                    JOptionPane.showMessageDialog(null, "Record Updated");
                    clear();
                    //showStudent();
                    updateAge();

                }catch(HeadlessException | FileNotFoundException | SQLException e){
                    JOptionPane.showMessageDialog(null, e);
                }

            }
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
 setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);    }//GEN-LAST:event_formWindowClosing

    private void btnPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrintActionPerformed
      String para=jLabel5.getText();
      String source ="/reports/memberReport.jrxml";
      InputStream is=null;
      InputStream inputStream=null;
        BufferedImage image= null;

        // InputStream imageInputStream = this.getClass().getResourceAsStream("/img/111aaa.jpg");
   
        try {
        // BufferedImage image = ImageIO.read(getClass().getResource("/img/111aaa.jpg"));

      URL   url=this.getClass().getClassLoader().getResource("img/111aaa.jpg");      
              String sql = "select * from member where id='"+para+"' " ;
    ps=con.prepareStatement(sql);
    rs=ps.executeQuery();
    if(rs.next()){
     byte[]pic=rs.getBytes("image");
      inputStream = rs.getBinaryStream("image");
      image = ImageIO.read(inputStream);
     
        // image=ImageIO.read(b);

 SimpleDateFormat dateFormat=new SimpleDateFormat("yyy-MM-dd");
                String join=dateFormat.format(dateJoin.getDate());
                String dob=dateFormat.format(birthday.getDate());
                
  is = getClass().getResourceAsStream(source);              
//JasperDesign jd=JRXmlLoader.load(new File("").getAbsolutePath()+"/src/folder/member.jrxml");
HashMap param =  new HashMap();
//param.put("myImg", imageInputStream);
//param.put("myImg", image);
param.put("myImg", url);

param.put("id", para);
param.put("surname", txtSurname.getText());
param.put("firstname", txtFirstname.getText());
param.put("contact", txtContact.getText());
param.put("hometown", txtHometown.getText());
param.put("daejoin", join);
param.put("sex",  CmdGender.getSelectedItem().toString());
param.put("age", jLabel6.getText());
param.put("dob", dob);
param.put("residence", txtResidence.getText());
param.put("baptise", cmdBaptise.getSelectedItem().toString());

param.put("user", jLabel3.getText());

param.put("marital_status", cmdMarital.getSelectedItem().toString());
param.put("marriage_type", cmdMarriagetype.getSelectedItem().toString());
param.put("spouse_name", txtSpousename.getText());
param.put("education_level", txtEduLevel.getSelectedItem().toString());
param.put("profession", txtProfession.getText());
param.put("class_name", txtClass.getText());
param.put("class_leader", txtLeader.getText());
param.put("address", txtAddress.getText());
param.put("father_name", txtFather.getText());
param.put("mother_name", txtMother.getText());

param.put("position_held", cmbPositionHeld.getSelectedItem().toString());
param.put("position", cmbPosition.getSelectedItem().toString());
param.put("position_duration", cmdDuration.getSelectedItem().toString());

//param.put("hometown", txtHometown.getText());
ImageIcon imageicon = new ImageIcon(new ImageIcon(image).getImage());
param.put("image", imageicon.getImage() );


InputStream jasperStream = getClass().getResourceAsStream("/folder/member.jrxml");
//JasperReport jr =  JasperCompileManager.compileReport(getClass().getResourceAsStream("/reports/memberReport.jrxml"));
 //JasperReport jr =  JasperCompileManager.compileReport(jd);
  JasperReport jr =  (JasperReport) JRLoader.loadObject(jasperStream);
  JasperPrint jp  = JasperFillManager.fillReport(jr, param, con);
  
  JasperViewer jv = new JasperViewer(jp,false); 
  jv.setVisible(true);
    
    }

    } catch (SQLException | JRException ex) {
        JOptionPane.showMessageDialog(null, ex.getMessage());
        
    } catch (IOException ex) {
        Logger.getLogger(manageMember.class.getName()).log(Level.SEVERE, null, ex);
    } 
    }//GEN-LAST:event_btnPrintActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
          int p = JOptionPane.showConfirmDialog(null, "You can't Recover it, Are you sure you want to DELETE this Member? Confirm and Proceed ","",JOptionPane.YES_NO_OPTION);
        if(p==0){         
                String sql = "delete from member where id='" + jLabel5.getText().trim() + "' ";
                    try {
                        ps = con.prepareStatement(sql);
                        ps.execute();
                        JOptionPane.showMessageDialog(null, "Person has been deleted Successfully", "Success Operation", 1);
                 clear();
             //  showStudent();
//               totalMember1();
//               totalFemale();
//               totalMale();
//               ageBelow18();
//               ageAbove18();
                    } catch (HeadlessException | SQLException e) {
                        JOptionPane.showMessageDialog(null, e.getMessage(), "Error", 2);
                        clear();
                    }
        }
          
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAllActionPerformed
        viewAll va =new viewAll();
        va.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnAllActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        HomePage h=new HomePage();
              
        this.setVisible(false);
   h.setVisible(true);

 
    }//GEN-LAST:event_jButton7ActionPerformed

    private void txtAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAddressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAddressActionPerformed

    private void txtAddressKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAddressKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAddressKeyPressed

    private void txtAddressKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAddressKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAddressKeyTyped

    private void txtFatherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFatherActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFatherActionPerformed

    private void txtFatherKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFatherKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFatherKeyReleased

    private void txtFatherKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFatherKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFatherKeyTyped

    private void txtMotherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMotherActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMotherActionPerformed

    private void txtMotherKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMotherKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMotherKeyReleased

    private void txtMotherKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMotherKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMotherKeyTyped

    private void txtSearchKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyTyped
       
    }//GEN-LAST:event_txtSearchKeyTyped

    private void txtSearchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyPressed
          
    }//GEN-LAST:event_txtSearchKeyPressed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
      jLabel5.show();
        jLabel6.show();
        btnUpdate.setEnabled(true);
        btnDelete.setEnabled(true);
        btnPrint.setEnabled(true);
        //updateAge();
       // removeAllCombo();
        String st=txtSearch.getText().trim();
String sql="Select * from member where id='"+st+"' OR surname='"+st+"' OR firstname='"+st+"'"
        + " OR contact='"+st+"' ";

    try {
          ps=con.prepareStatement(sql);
            rs=ps.executeQuery();
            if(rs.next()){
                
        
                String id = rs.getString("id");
                jLabel5.setText(id);

                 String surName = rs.getString("surname");
                txtSurname.setText(surName);
                
                String firstName = rs.getString("firstname");
                txtFirstname.setText(firstName);

                String hometown = rs.getString("home_town");
                txtHometown.setText(hometown);

                String residence = rs.getString("residence");
                txtResidence.setText(residence);

                String contact = rs.getString("contact");
                txtContact.setText(contact);

                String age = rs.getString("age");
                jLabel6.setText(age+"years");

                String spouseName = rs.getString("spouse_name");
                txtSpousename.setText(spouseName);

                String profession = rs.getString("profession");
                txtProfession.setText(profession);

                String className = rs.getString("class_name");
                txtClass.setText(className);

                String leaderName = rs.getString("class_leader");
                txtLeader.setText(leaderName);

                
                String adress = rs.getString("address");
                txtAddress.setText(adress);

                String father = rs.getString("father_name");
                txtFather.setText(father);

                String mother = rs.getString("mother_name");
                txtMother.setText(mother);

                String form = rs.getString("gender");
                CmdGender.setSelectedItem(form);

                String Class = rs.getString("marital_status");
                cmdMarital.setSelectedItem(Class);

                String marriageType = rs.getString("marriage_type");
                cmdMarriagetype.setSelectedItem(marriageType);

                String eduLevel = rs.getString("education_level");
                txtEduLevel.setSelectedItem(eduLevel);


                String baptise = rs.getString("baptise");
                cmdBaptise.setSelectedItem(baptise);

                String held = rs.getString("position_held");
                cmbPositionHeld.setSelectedItem(held);

                String position = rs.getString("position");
                cmbPosition.setSelectedItem(position);

                String duration = rs.getString("position_duration");
                cmdDuration.setSelectedItem(duration);

                Date dob = rs.getDate("dob");
                birthday.setDate(dob);

                Date date = rs.getDate("date_join");
                dateJoin.setDate(date);
                

                byte[]pic=rs.getBytes("image");
                
                if(pic == null){
                    
                }else{
                ImageIcon image=new ImageIcon(pic);
                Image im= image.getImage();
                Image myimg=im.getScaledInstance(lblPicture.getWidth(), lblPicture.getHeight(), Image.SCALE_SMOOTH);
                ImageIcon newImage=new ImageIcon(myimg);
                lblPicture.setIcon(newImage);
                }
                           
            
            }else{
            JOptionPane.showMessageDialog(null,"No record found");
            }  
           
    }catch (SQLException ex) {
        JOptionPane.showMessageDialog(null, ex.getMessage());
        
    }       
    }//GEN-LAST:event_jButton10ActionPerformed

    private void txtFirstnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFirstnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFirstnameActionPerformed

    private void txtFirstnameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFirstnameKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFirstnameKeyReleased

    private void txtFirstnameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFirstnameKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFirstnameKeyTyped

    private void txtRetakePicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRetakePicActionPerformed
        //Image image = webcam.getImage();
        txtOpenCam.setEnabled(true);
        txtRetakePic.setEnabled(false);
        //imageHolder.setIcon(new ImageIcon(image));
    }//GEN-LAST:event_txtRetakePicActionPerformed

    private void txtOpenCamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtOpenCamActionPerformed
        webcam = Webcam.getDefault();
        // webcam.setViewSize(new Dimension(320,240));
        if(!webcam.isOpen()){
            webcam.setViewSize(new Dimension(320,240));
            // webcam.setViewSize(WebcamResolution.VGA.getSize());
        }
        webcam.open();
        String name = txtSurname.getText().trim();
        if(!checkInputs()){
            JOptionPane.showMessageDialog(null,"Please enter your surname","Error",2);
        }else{

            if(!isRunning){
                btnChoose.setEnabled(false);
                txtRetakePic.setEnabled(false);
                txtOpenCam.setEnabled(true);
                txtOpenCam.setText("Snap Picture");
                isRunning=true;
                new videoFeedTaker().start();

            }else{
                try {
                    String createPath = System.getProperty("user.home")+File.separator+ "capture.jpg";
                    File savePath = new File(createPath);

                    ImageIO.write(webcam.getImage(), "JPG", savePath);

                    String getPath=savePath.getAbsolutePath();
                    lblPicture.setIcon(ResizeImage(getPath,null));
                    imagePath=getPath;

                    txtOpenCam.setText("Open Webcam");
                    txtRetakePic.setEnabled(true);
                    txtOpenCam.setEnabled(false);
                    isRunning=false;
                    webcam.close();
                    JOptionPane.showMessageDialog(null,"Image snap  successfully");
                     btnChoose.setEnabled(true);

                } catch (HeadlessException | IOException e) {
                    e.printStackTrace();
                }finally{
                    webcam.close();
                }

            }
        }
    }//GEN-LAST:event_txtOpenCamActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(manageMember.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(manageMember.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(manageMember.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(manageMember.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new manageMember().setVisible(true);
            }
        });
    }
      class videoFeedTaker extends Thread{

        @Override
        public void run() {
            while(isRunning){
                try {
                    Image image = webcam.getImage();
                    lblPicture.setIcon(new ImageIcon(image));
                    Thread.sleep(50);
                } catch (InterruptedException ex) {
                    Logger.getLogger(manageMember.class.getName()).log(Level.SEVERE, null, ex.getMessage());
                }
            }
            
        }
        
    
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JComboBox<String> CmdGender;
    public static final com.toedter.calendar.JDateChooser birthday = new com.toedter.calendar.JDateChooser();
    private javax.swing.JButton btnAll;
    private javax.swing.JButton btnChoose;
    public javax.swing.JButton btnDelete;
    public javax.swing.JButton btnPrint;
    private javax.swing.JButton btnReset;
    public javax.swing.JButton btnSave;
    public javax.swing.JButton btnUpdate;
    public javax.swing.JComboBox<String> cmbPosition;
    public javax.swing.JComboBox<String> cmbPositionHeld;
    public javax.swing.JComboBox<String> cmdBaptise;
    public javax.swing.JComboBox<String> cmdDuration;
    public javax.swing.JComboBox<String> cmdMarital;
    public javax.swing.JComboBox<String> cmdMarriagetype;
    public static final com.toedter.calendar.JDateChooser dateJoin = new com.toedter.calendar.JDateChooser();
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel37;
    public javax.swing.JLabel jLabel5;
    public javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JLabel lblPicture;
    public javax.swing.JTextField txtAddress;
    public javax.swing.JTextField txtClass;
    public javax.swing.JTextField txtContact;
    public javax.swing.JComboBox<String> txtEduLevel;
    public javax.swing.JTextField txtFather;
    public javax.swing.JTextField txtFirstname;
    public javax.swing.JTextField txtHometown;
    public javax.swing.JTextField txtLeader;
    public javax.swing.JTextField txtMother;
    private javax.swing.JButton txtOpenCam;
    public javax.swing.JTextField txtProfession;
    public javax.swing.JTextField txtResidence;
    private javax.swing.JButton txtRetakePic;
    private javax.swing.JTextField txtSearch;
    public javax.swing.JTextField txtSpousename;
    public javax.swing.JTextField txtSurname;
    // End of variables declaration//GEN-END:variables

    boolean checkInputs(){
       if(txtSurname.getText().equals("")  ){
           return false;
       }else{
           try{
//               Integer.parseInt(txtFatherNumber.getText());
//               Integer.parseInt(txtMotherNumber.getText());
               return true;
           }catch(NumberFormatException e ){
             JOptionPane.showMessageDialog(null,e.getMessage());
             return false;
           }
       
       }
    
}
    void clear(){
           txtOpenCam.setText("Open Webcam");
                    txtRetakePic.setEnabled(false);
                    txtOpenCam.setEnabled(true);
                    if(isRunning){
                    webcam.close();
                    }
     txtAddress.setText("");
     txtFather.setText("");
     txtMother.setText("");
     txtSurname.setText("");
     txtFirstname.setText("");
     txtHometown.setText("");
     txtResidence.setText("");
     txtContact.setText("");
     txtSpousename.setText("");
     txtProfession.setText("");
     txtClass.setText("");
     txtLeader.setText("");
     txtSearch.setText("");
     CmdGender.setSelectedIndex(0);
     cmdMarital.setSelectedIndex(0);
     cmdMarriagetype.setSelectedIndex(0);
     txtEduLevel.setSelectedIndex(0);
     cmdBaptise.setSelectedIndex(0);
     cmbPositionHeld.setSelectedIndex(0);
     cmbPosition.setSelectedIndex(0);
     cmdDuration.setSelectedIndex(0);
       Date date = new Date();
         birthday.setDate(date);
         dateJoin.setDate(date);
     cmdMarriagetype.disable();
         cmbPosition.disable();
         cmdDuration.disable();
         jLabel5.hide();
         jLabel6.hide();
         lblPicture.setIcon(new ImageIcon("churchSystem.images/Default-avatar.jpg"));
         btnUpdate.setEnabled(false);
         btnDelete.setEnabled(false);
          btnSave.setEnabled(true);
            btnPrint.setEnabled(false);
            btnChoose.setEnabled(true);

          

}
void showStudent(){
     updateAge();
       try{
        
        
        String sql ="select id,surname,firstname,gender,age,residence,contact,date_join from member";
        
        ps=con.prepareStatement(sql);
        rs=ps.executeQuery();
        //jTable2.setModel(DbUtils.resultSetToTableModel(rs)); 

    }
    catch(SQLException e){
    JOptionPane.showMessageDialog(null, e);
    }
   
}

void totalMember(){
             try{
           stm=con.createStatement();
         String sql="Select count(id) AS Total from member";
            rs=stm.executeQuery(sql);
            rs.next();
                    String txt=rs.getString("Total");
                 //   jLabel1.setText(txt);
          }catch(SQLException e){
              JOptionPane.showMessageDialog(null, e.getMessage());
          }
          
}
boolean containsDigit(String text){
for(int i=0; i<text.length(); i++){
  char c = text.charAt(i);
    if(Character.isDigit(c)){
    return true;
    }
}
return false;
}

void updateAge(){
      try{
    String sql = "Select id, dob from member";
    ps=con.prepareStatement(sql);
    rs=ps.executeQuery();
    while(rs.next()){
        String id = rs.getString("id");
       Date date= rs.getDate("dob");
     LocalDate L = LocalDate.of(date.getYear()+1900, date.getMonth(), date.getDay());
     LocalDate now = LocalDate.now();
     Period diff = Period.between(L, now);
     
         String sql1 ="update member set age=? where id='"+id+"' ";
         ps=con.prepareStatement(sql1);
         ps.setInt(1, diff.getYears());
         ps.executeUpdate();
            
    }
}
catch(SQLException e){
         JOptionPane.showMessageDialog(null,e.getMessage());

}
}
void removeAllCombo(){
    try{
         CmdGender.removeAllItems();
cmdMarital.removeAllItems();
cmdMarriagetype.removeAllItems();
txtEduLevel.removeAllItems();
cmdBaptise.removeAllItems();
cmbPositionHeld.removeAllItems();
cmbPosition.removeAllItems();
cmdDuration.removeAllItems();
    }catch(Exception e){
        JOptionPane.showMessageDialog(null,e.getMessage());
    }

}

void totalMember1(){
    HomePage h=new HomePage();
             try{
           stm=con.createStatement();
         String sql="Select count(id) AS Total from member";
            rs=stm.executeQuery(sql);
            rs.next();
                    String txt=rs.getString("Total");
                    h.jLabel4.setText(txt);
          }catch(HeadlessException | SQLException e){
                    JOptionPane.showMessageDialog(null, e);
                }
          
}
 void ageBelow18(){
     HomePage h=new HomePage();
             try{
           stm=con.createStatement();
         String sql="Select count(id) AS Total from member where age<'18' ";
            rs=stm.executeQuery(sql);
            rs.next();
                    String txt=rs.getString("Total");
                    h.jLabel17.setText(txt);
          }catch(SQLException e){
              JOptionPane.showMessageDialog(null, e.getMessage());
          }
          
}
 
void ageAbove18(){
    HomePage h=new HomePage();
             try{
           stm=con.createStatement();
         String sql="Select count(id) AS Total from member where age > '17' ";
            rs=stm.executeQuery(sql);
            rs.next();
                    String txt=rs.getString("Total");
                    h.jLabel21.setText(txt);
          }catch(SQLException e){
              JOptionPane.showMessageDialog(null, e.getMessage());
          }
          
}
void totalMale(){
    HomePage h=new HomePage();
             try{
           stm=con.createStatement();
         String sql="Select count(id) AS Total from member where gender='Male'";
            rs=stm.executeQuery(sql);
            rs.next();
                    String txt=rs.getString("Total");
                    h.jLabel12.setText(txt);
          }catch(SQLException e){
              JOptionPane.showMessageDialog(null, e.getMessage());
          }
          
}

void totalFemale(){
    HomePage h=new HomePage();
             try{
           stm=con.createStatement();
         String sql="Select count(id) AS Total from member where gender='Female' ";
            rs=stm.executeQuery(sql);
            rs.next();
                    String txt=rs.getString("Total");
                    h.jLabel15.setText(txt);
          }catch(SQLException e){
              JOptionPane.showMessageDialog(null, e.getMessage());
          }
          
}

}
